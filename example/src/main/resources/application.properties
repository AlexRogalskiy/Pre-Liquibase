#
#  Default properties for application 'Medusa'.
#
#


# Note:  Due to how Liquibase works it is best to keep the database schema name
# with all letters in same case, i.e. either all in upper-case or all in
# lower-case. In other words: "Foo_bar" is not a good value, but "foo_bar" or
# "FOO_BAR" is. The reason is that Liquibase doesn't let you control the
# object quoting strategy for its own tables, DATABASECHANGELOG and DATABASECHANGELOGLOCK.
# It will always use quoting strategy LEGACY for these objects. This means that
# it will be quoting the schema name it is of mixed case and this is most
# likely not what you want. To avoid surprises: stick to either all lower-case or
# all upper-case.
# In the example below the db schema name can be influenced from outside
# (by an OS env var) which means that we have to take care that such OS var 
# does not inject a mixed-case value. 


# Set a default for the environment name.
# As any Spring Boot configuration property it can be overriden by an OS 
# environment variable, in this case variable 'MEDUSA_ENVNAME'.
medusa.envName=default_environment

# Create the variable for schema name where tables are located
my.db.schemaname=medusa_${medusa.envName}

# Set the schema to use. We have to tell both Hibernate and Liquibase this.
spring.jpa.properties.hibernate.default_schema=${my.db.schemaname}
spring.liquibase.default-schema=${my.db.schemaname}
spring.liquibase.liquibase-schema=${my.db.schemaname}



# DataSource configuration:

# PostgreSQL example
#spring.datasource.url=jdbc:postgresql://localhost:5432/medusa
# MS SQL Server example
#spring.datasource.url=jdbc:sqlserver://localhost\\SQLEXPRESS;databaseName=medusa
#spring.datasource.username=medusa_nonprod
#spring.datasource.password=verysecret



# Debugging
#debug=true
#logging.level.org.springframework.jdbc.datasource.init=DEBUG
#logging.level.org.springframework.boot.autoconfigure=DEBUG
#logging.level.net.lbruun.springboot.preliquibase=TRACE
#logging.level.liquibase=TRACE
